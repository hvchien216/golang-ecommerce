version: '3.7'

services:
  pg:
    container_name: ${PROJECT_NAME}-db-local
    image: postgres:11-alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - network
    environment:
      TZ: UTC
      POSTGRES_USER: ${PROJECT_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
  db-migrate:
    container_name: ${PROJECT_NAME}-db-migrate-local
    image: migrate/migrate:v4.15.2
    restart: "no"
    entrypoint: ""
    networks:
      - network
    environment:
      TZ: UTC
      DB_URL: postgres://:@pg:5432/${PROJECT_NAME}?sslmode=disable
      PGUSER: ${PROJECT_NAME}
      PGPASSWORD: ${PROJECT_NAME}
  redis:
    container_name: ${PROJECT_NAME}-redis-local
    image: redis:6-alpine
    networks:
      - network
    restart: always
  api:
    container_name: ${PROJECT_NAME}-api-local
    networks:
      - network
    environment:
      TZ: UTC
      PORT: '3000'
      CORS_ALLOWED_ORIGINS: '*'
      DB_URL: postgres://${PROJECT_NAME}:${PROJECT_NAME}@pg:5432/${PROJECT_NAME}?sslmode=disable
      DB_POOL_MAX_OPEN_CONNS: '4'
      DB_POOL_MAX_IDLE_CONNS: '2'
      DB_DEBUG_LOGGING_ENABLED: 'true'
      GQL_INTROSPECTION_ENABLED: 'true'
      REDIS_URL: redis://redis:6379
      REDIS_DB: '0'
networks:
  network:
    name: ${PROJECT_NAME}-local
